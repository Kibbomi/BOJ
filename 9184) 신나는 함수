#include <cstdio>
#include <algorithm>
using namespace std;

int dp[21][21][21];

int w(int a, int b, int c)
{
	//memoization
	if (dp[a][b][c] != -1)
		return dp[a][b][c];

	if (a <= 0 || b <= 0 || c <= 0)
		return dp[a][b][c] = 1;
	
	if (a > 20 || b > 20 || c > 20)
		return dp[a][b][c] = w(20, 20, 20);
	
	if (a < b && b < c)
		return  dp[a][b][c] = w(a, b, c - 1) + w(a, b - 1, c - 1) - w(a, b - 1, c);

	return  dp[a][b][c] = w(a - 1, b, c) + w(a - 1, b - 1, c) + w(a - 1, b, c - 1) - w(a - 1, b - 1, c - 1);
}
int main(void)
{
	for (int i = 0; i <= 20; i++)
		for (int j = 0; j <= 20; j++)
			for (int k = 0; k <= 20; k++)
				dp[i][j][k] = -1;

	int a, b, c;
	scanf("%d %d %d", &a, &b, &c);

	while (!(a == -1 && b == -1 && c == -1))
	{
		int ta, tb, tc;
		ta = a, tb = b, tc = c;
		if (a <= 0) a = 0;
		if (b <= 0) b = 0;
		if (c <= 0) c = 0;
		if (a > 20) a = 20;
		if (b > 20) b = 20;
		if (c > 20) c = 20;
		printf("w(%d, %d, %d) = %d\n", ta, tb, tc, w(a, b, c));
		scanf("%d %d %d", &a, &b, &c);
	}
	return 0;
}
