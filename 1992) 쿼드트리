#include <stdio.h>

char map[64][64];

int retone;
int retzero;
void divide(int left, int right, int up, int down)
{
	if (left <= right && up <= down)
	{
		int sum = 0;
		bool flag = true;
		//check condition
		for (int i = up; i <= down; i++)
			for (int j = left; j <= right; j++)
			{
				sum += map[i][j];
			}
		if (sum == (right - left + 1) *(right - left + 1) || sum == 0)
		{
			//end condition
			flag = false;
			if (sum == 0)
			{
				printf("0");
			}
			else
			{
				printf("1");
			}
		}

		if (flag)
		{
			//divide
			int horizontal = 0, vertical = 0;
			horizontal = (left + right) / 2;
			vertical = (up + down) / 2;

			//left up
			printf("(");
			divide(left, horizontal, up, vertical);	

			//right up
			divide(horizontal + 1, right, up, vertical);
			
			//left bottom
			divide(left, horizontal, vertical + 1, down);

			//right bottom
			divide(horizontal + 1, right, vertical + 1, down);
			printf(")");
		}
	}
	return;
}

int main(void)
{
	int n;
	scanf("%d", &n);

	for (int i = 0; i < n; i++)
		scanf("%s", map[i]);

	for (int i = 0; i < n; i++)
		for (int j = 0; j < n; j++)
			map[i][j] -= '0';

	divide(0, n - 1, 0, n - 1);

	
	return 0;
}
