//DP
#include <cstdio>
#include <algorithm>
using namespace std;

int map[100][100];
long long int dp[100][100];
int n;

//i->0 right, i->1 bottom..
const int dx[] = { 1,0 };
const int dy[] = { 0,1 };

int main(void)
{
	scanf("%d", &n);
	for (int i = 0; i < n; i++)
		for (int j = 0; j < n; j++)
			scanf("%d", &map[i][j]);

	//initialization
	dp[0][0] = 1;
	for (int i = 0; i < n; i++)
		for (int j = 0; j < n; j++)
		{
			if (dp[i][j] != 0 && map[i][j] != 0)
			{
				for (int dir = 0; dir < 2; dir++)
				{
					int ny = i +map[i][j] * dy[dir];
					int nx = j +map[i][j] * dx[dir];

					if (ny < 0 || nx < 0 || nx >= n || ny >= n)
						continue;

					dp[ny][nx] += dp[i][j];
				}
			}
		}

	printf("%lld", dp[n - 1][n - 1]);
	return 0;
}
