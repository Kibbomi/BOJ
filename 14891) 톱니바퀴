#include <stdio.h>

char v[5][9];

int k;

void turn(int num, int dir)
{
	int temp;

	if (dir == 1)
	{
		//0->1 .... 7->0
		temp = v[num][7];

		for (int i = 7; i > 0; i--)
			v[num][i] = v[num][i - 1];

		v[num][0] = temp;
	}
	else
	{
		//0<-1 .... 7<-0
		temp = v[num][0];

		for (int i = 0; i < 7; i++)
			v[num][i] = v[num][i + 1];

		v[num][7] = temp;
	}

	return ;
}
void rotate(int num, int dir)
{
	//1 clockwise  -1counterclockwise
	//오른쪽은 2번index 왼쪽은 6번 index
	int cdir;
	if (dir == 1)
		cdir = -1;
	else
		cdir = 1;
	bool flag[5] = { false, };

	if (num == 1)
	{
		flag[num] = true;
		if (v[num][2] != v[num + 1][6])
		{
			flag[num + 1] = true;

			if (v[num + 1][2] != v[num + 2][6]) {
				
				flag[num + 2] = true;

				if (v[num + 2][2] != v[num + 3][6])
					flag[num + 3] = true;
			}
		}

		if(flag[num])
			turn(num, dir);
		if (flag[num+1])
			turn(num+1, cdir);
		if (flag[num+2])
			turn(num+2, dir);
		if (flag[num+3])
			turn(num+3, cdir);

		
		
	}
	else if (num == 2)
	{
		flag[num] = true;

		//left side,

		if (v[num - 1][2] != v[num][6])
			flag[num - 1] = true;

		//right side
		if (v[num][2] != v[num + 1][6])
		{
			flag[num + 1] = true;

			if (v[num + 1][2] != v[num + 2][6])
				flag[num + 2] = true;
		}
		if (flag[num])
			turn(num, dir);
		if (flag[num -1])
			turn(num - 1, cdir);
		if (flag[num + 1])
			turn(num + 1, cdir);
		if (flag[num + 2])
			turn(num + 2, dir);

	}
	else if (num == 3)
	{
		flag[num] = true;
		

		//left side,

		if (v[num - 1][2] != v[num][6])
		{
			flag[num-1] = true;

			if (v[num - 2][2] != v[num - 1][6])
				flag[num-2] = true;
		}
		//right side
		if (v[num][2] != v[num + 1][6])
			flag[num+1] = true;

		if (flag[num])
			turn(num, dir);
		if (flag[num - 1])
			turn(num - 1, cdir);
		if (flag[num - 2])
			turn(num - 2, dir);
		if (flag[num + 1])
			turn(num + 1, cdir);


	}
	else
	{
		flag[num] = true;
		//left side,

		if (v[num - 1][2] != v[num][6])
		{
			flag[num - 1] = true;

			if (v[num - 2][2] != v[num - 1][6])
			{
				flag[num - 2] = true;

				if (v[num - 3][2] != v[num - 2][6])
					flag[num - 3] = true;
			}
		}

		if (flag[num])
			turn(num, dir);
		if (flag[num - 1])
			turn(num - 1, cdir);
		if (flag[num - 2])
			turn(num - 2, dir);
		if (flag[num - 3])
			turn(num - 3, cdir);



	}
	return;
}

int main(void)
{
	for (int i = 1; i <= 4; i++)
		scanf("%s", v[i]);

	scanf("%d", &k);

	for (int i = 0; i < k; i++)
	{
		int num, dir;

		scanf("%d %d", &num, &dir);

		rotate(num, dir);
		
	}

	int ret = 0;

	
	if (v[1][0] == '1')	ret += 1;
	if (v[2][0] == '1')	ret += 2;
	if (v[3][0] == '1')	ret += 4;
	if (v[4][0] == '1')	ret += 8;
	

	printf("%d", ret);
	return 0;
}
