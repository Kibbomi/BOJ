#include <cstdio>
#include <algorithm>
#include <string.h>
#include <stack>
using namespace std;

char up[1000], down[1000];
int dp[1001][1001];
stack<char> s;
int uplen, downlen;

int calnum(void)
{
	uplen = strlen(up);
	downlen = strlen(down);

	for (int j = 1; j <= uplen; j++)
		for (int i = 1; i <= downlen; i++)
			if (down[i - 1] == up[j - 1])
				dp[i][j] = dp[i - 1][j - 1] + 1;
			else
				if (dp[i][j - 1] > dp[i - 1][j])
					dp[i][j] = dp[i][j - 1];
				else
					dp[i][j] = dp[i - 1][j];
		
	
	return dp[downlen][uplen];
}
void calstring()
{
	int sy, sx;
	sy = downlen, sx = uplen;

	while (dp[sy][sx] != 0)
	{
		if (down[sy-1] == up[sx-1])
		{
			sy--; sx--;
			s.push(down[sy]);
		}
		else
		{
			if (dp[sy - 1][sx] > dp[sy][sx - 1])
			{
				sy--;
			}
			else
			{
				sx--;
			}
		}
	}
	return;
}
int main(void)
{
	scanf("%s", up);
	scanf("%s", down);
	
	printf("%d\n", calnum());
	calstring();
	while (!s.empty())
	{
		printf("%c", s.top());
		s.pop();
	}
	return 0;
}
