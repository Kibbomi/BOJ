#include <stdio.h>
#include <string.h>
#include <algorithm>
using namespace std;

char first[100001];
char clone[100001];
char second[100001];
int n,ret=0x7fffffff;

void change(int index)
{
	if (index == 0){
		if (clone[index] == '1') clone[index] = '0';
		else clone[index] = '1';

		if (clone[index + 1] == '1') clone[index + 1] = '0';
		else clone[index + 1] = '1';
	}
	else if (index == n - 1){
		if (clone[index] == '1') clone[index] = '0';
		else clone[index] = '1';

		if (clone[index - 1] == '1') clone[index - 1] = '0';
		else clone[index - 1] = '1';
	}
	else{
		if (clone[index] == '1') clone[index] = '0';
		else clone[index] = '1';

		if (clone[index - 1] == '1') clone[index - 1] = '0';
		else clone[index - 1] = '1';

		if (clone[index + 1] == '1') clone[index + 1] = '0';
		else clone[index + 1] = '1';
	}
	return;
}

void cpmap(char dest[], char src[])
{
	for (int i = 0; i < n; i++)
		dest[i] = src[i];
	return;
}
int main(void)
{
	scanf("%d", &n);
	scanf("%s", first);
	scanf("%s", second);

	cpmap(clone, first);
	int candi = 0;
	
	//첫번째꺼를 바꾸는경우,
	change(0);	candi++;
	for (int i = 1; i < n; i++)
	{
		if (clone[i - 1] == second[i - 1])
			continue;
		else {
			change(i);
			candi++;
		}
	}
	if (strcmp(clone, second) == 0)
		ret = min(candi, ret);


	cpmap(clone, first);
	candi = 0;
	//첫번째꺼 바꾸지 않는 경우
	for (int i = 1; i < n; i++)
	{
		if (clone[i - 1] == second[i - 1])
			continue;
		else {
			change(i);
			candi++;
		}
	}
	if (strcmp(clone, second) == 0)
		ret = min(candi, ret);

	if (ret == 0x7fffffff)
		printf("-1");
	else
		printf("%d", ret);
	
		
	return 0;
}
