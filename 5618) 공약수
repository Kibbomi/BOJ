#include <stdio.h>
#include <algorithm>
using namespace std;
int ret[10000];

int main(void)
{	
	int n;
	scanf("%d", &n);

	if (n == 2)
	{
		int a, b;
		scanf("%d %d", &a, &b);

		int big, small;
		if (a > b)
		{
			big = a;
			small = b;
		}
		else
		{
			big = b;
			small = a;
		}

		while (small != 0)
		{
			int rest;
			rest = big%small;

			big = small;
			small = rest;
		}

		int i;
		int num = 0;
		for (i = 1; i*i < big; i++)
		{
			if (big%i == 0)
			{
				ret[num++] = i;
				ret[num++] = big / i;
			}
		}
		if (i*i == big)
			ret[num++] = i;

		sort(ret, ret + num);
		
		for (int j = 0; j < num; j++)
			printf("%d\n", ret[j]);
	}
	else
	{
		int a, b, c;
		scanf("%d %d %d", &a, &b, &c);

		int big, small;
		if (a > b)
		{
			big = a;
			small = b;
		}
		else
		{
			big = b;
			small = a;
		}

		while (small != 0)
		{
			int rest;
			rest = big%small;

			big = small;
			small = rest;
		}
		a = big, b = c;
		if (a > b)
		{
			big = a;
			small = b;
		}
		else
		{
			big = b;
			small = a;
		}

		while (small != 0)
		{
			int rest;
			rest = big%small;

			big = small;
			small = rest;
		}
		int i;
		int num = 0;
		for (i = 1; i*i < big; i++)
		{
			if (big%i == 0)
			{
				ret[num++] = i;
				ret[num++] = big / i;
			}
		}
		if (i*i == big)
			ret[num++] = i;

		sort(ret, ret + num);

		for (int j = 0; j < num; j++)
			printf("%d\n", ret[j]);
	}

	return 0;
}
