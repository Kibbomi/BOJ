#include <stdio.h>
#include <algorithm>
using namespace std;

int map[10][10];
int papernum = 0;
int ret = 0x7fffffff;
int use[] = { 0,5,5,5,5,5 };
bool icanput(int y, int x, int size)
{
	if (y + size > 10 || x + size > 10 || use[size] == 0)	return false;

	for (int i = y; i < y + size; i++)
		for (int j = x; j < x + size; j++)
			if (map[i][j] == 0)
				return false;
	return true;
}
void putpaper(int y, int x, int size)
{
	use[size]--;
	for (int i = y; i < y + size; i++)
		for (int j = x; j < x + size; j++)
			map[i][j] = 0;
	papernum -= size*size;
	return;
}
void cleanpaper(int y, int x, int size)
{
	use[size]++;
	for (int i = y; i < y + size; i++)
		for (int j = x; j < x + size; j++)
			map[i][j] = 1;
	papernum += size*size;
	return;
}
void dfs(int depth, int y, int x)
{
	if (papernum == 0)
	{
		ret = min(ret, depth);
		
		return;
	}
	
	for (int i = y; i < 10; i++) {
		for (int j = x; j < 10; j++)
		{
			if (map[i][j] == 1)
			{
				for (int k = 5; k >= 1; k--)
				{
					if (icanput(i, j, k))
					{
						putpaper(i, j, k);
						dfs(depth + 1, i, j + k);
						cleanpaper(i, j, k);
					}
				}
				return;
			}
		}
		x = 0;
	}
}
int main(void)
{
	for (int i = 0; i < 10; i++)
		for (int j = 0; j < 10; j++){
			scanf("%d", &map[i][j]);
			if(map[i][j] == 1)
				papernum++;
		}

	dfs(0,0,0);
	if (ret == 0x7fffffff)
		printf("-1");
	else
		printf("%d", ret);
	return 0;
}
