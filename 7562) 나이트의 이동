#include <stdio.h>
#include <queue>
using namespace std;

const int dx[] = { 1,-1,0,0 };
const int dy[] = { 0,0,1,-1 };

const int kdx[] = { 1,2,2,1,-1,-2,-2,-1 };
const int kdy[] = { -2,-1,1,2,2,1,-1,-2 };

struct coord {
	int y, x;
	int time;
};



int main(void)
{
	int t;
	scanf("%d", &t);

	for (int a = 0; a < t; a++)
	{
		int map[300][300] = { 0 };
		int l;
		bool visited[300][300] = { false, };
		scanf("%d", &l);

		
		coord src, dest;
		scanf("%d %d", &src.y, &src.x);
		scanf("%d %d", &dest.y, &dest.x);
		src.time = 0;

		queue<coord> q;
			
		q.push(src);
		visited[src.y][src.x] = true;

		while (!q.empty())
		{
			coord cur = q.front(); q.pop();

			if (cur.x == dest.x && cur.y == dest.y)
			{
				dest.time = cur.time;
				break;
			}
			for (int dir = 0; dir < 8; dir++)
			{
				coord next;
				next.y = cur.y + kdx[dir];
				next.x = cur.x + kdy[dir];
				next.time = cur.time + 1;

				if (next.y < 0 || next.y >= l || next.x < 0 || next.x >= l)
					continue;

				if (visited[next.y][next.x] == false)
				{
					q.push(next);
					visited[next.y][next.x] = true;
				}

			}
		}
		printf("%d\n", dest.time);
	}
	return 0;
}
