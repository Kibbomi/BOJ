#include <stdio.h>
#include <queue>
using namespace std;

const int dx[] = { 1,-1,0,0 };
const int dy[] = { 0,0,1,-1 };

struct coord {
	int y, x;
};

int main(void)
{
	int t;
	scanf("%d", &t);

	for (int a = 0; a < t; a++)
	{
		int map[50][50] = { 0, };
		bool visited[50][50] = { false, };
		int num;
		
		int xl, yl;
		scanf("%d %d %d", &xl, &yl, &num);

		for (int i = 0; i < num; i++)
		{
			int y, x;
			scanf("%d %d", &x, &y);

			map[y][x] = 1;
		}
		int ret = 0;
		for (int i = 0; i < yl; i++)
		{
			for (int j = 0; j < xl; j++)
			{
				if (map[i][j] == 1 && visited[i][j] == false)
				{
					//bfs

					queue<coord> q;

					coord t;
					t.x = j;
					t.y = i;
					

					q.push(t);
					visited[t.y][t.x] = true;

					while (!q.empty())
					{
						coord ct = q.front(); q.pop();

						for (int i = 0; i < 4; i++)
						{
							coord nt;
							nt.x = ct.x + dx[i];
							nt.y = ct.y + dy[i];
							
							if (nt.x < 0 || nt.x >= xl || nt.y < 0 || nt.y >= yl)
								continue;

							if (map[nt.y][nt.x] == 1 && visited[nt.y][nt.x] == false)
							{
								q.push(nt);
								visited[nt.y][nt.x] = true;
							}
						}
					}
					ret += 1;

				}
			}
		}
		printf("%d\n", ret);
	}
	return 0;
}
