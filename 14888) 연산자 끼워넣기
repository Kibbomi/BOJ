#include <stdio.h>
#include <algorithm>
using namespace std;
int n;
int num[11];
int op[4];
int minret = 0x7fffffff;
int maxret = -0x7fffffff;

void dfs(int depth,int val)
{
	if (depth == n - 1)
	{
		minret = min(minret, val);
		maxret = max(maxret, val);
		return;
	}
	for (int i = 0; i < 4; i++)
	{
		if (op[i] > 0)
		{
			op[i]--;
			if (i == 0)
				dfs(depth + 1, val + num[depth + 1]);
			else if (i == 1)
				dfs(depth + 1, val - num[depth + 1]);
			else if (i == 2)
				dfs(depth + 1, val * num[depth + 1]);
			else if (i == 3)
				dfs(depth + 1, val / num[depth + 1]);
			op[i]++;
		}
	}
	return;
}
int main(void)
{
	scanf("%d",&n);
	for (int i = 0; i < n; i++)
		scanf("%d", &num[i]);
	scanf("%d %d %d %d", &op[0], &op[1], &op[2], &op[3]);

	//permutation
	dfs(0,num[0]);

	printf("%d\n", maxret);
	printf("%d\n", minret);

	return 0;
}
