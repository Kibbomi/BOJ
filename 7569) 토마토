#include <stdio.h>
#include <queue>
using namespace std;

//동서남북 위아래
const int dx[] = { 1,-1,0,0,0,0 };
const int dy[] = { 0,0,1,-1,0,0 };
const int dz[] = { 0,0,0,0,1,-1 };	

struct coord {
	int y, x, z;
	int time;
};

int map[100][100][100];
bool visited[100][100][100];

int main(void)
{
	
	int x, y, z;
	scanf("%d %d %d", &x, &y, &z);

	queue<coord> q;

	for (int k = 0; k < z; k++)
	{
		for (int i = 0; i < y; i++)
		{
			for (int j = 0; j < x; j++)
			{
				scanf("%d", &map[k][i][j]);
				if (map[k][i][j] == 1 && visited[k][i][j] == false)
				{
					coord t;
					t.x = j;
					t.y = i;
					t.z = k;
					t.time = 0;
					q.push(t);
					visited[k][i][j] = true;
				}
			}
		}
	}
	int time = 0;
	while (!q.empty())
	{
		coord cur;
		cur = q.front(); q.pop();
		
		if (time < cur.time)
			time = cur.time;

		for (int i = 0; i < 6; i++)
		{
			coord next;
			next.x = cur.x + dx[i];
			next.y = cur.y + dy[i];
			next.z = cur.z + dz[i];
			next.time = cur.time + 1;

			if (next.x < 0 || next.y < 0 || next.z < 0 ||
				next.x >= x || next.y >= y || next.z >= z)
				continue;

			if (map[next.z][next.y][next.x] == 0 &&
				visited[next.z][next.y][next.x] == false)
			{
				q.push(next);
				visited[next.z][next.y][next.x] = true;
				map[next.z][next.y][next.x] = 1;
			}
		}
	}

	bool flag = true;

	for (int k = 0; k < z; k++)
	{
		for (int i = 0; i < y; i++)
		{
			for (int j = 0; j < x; j++)
			{
				if (map[k][i][j] == 0)
					flag = false;
			}
		}
	}
	
	if (flag)
		printf("%d", time);
	else
		printf("-1");
	return 0;
}
